[{"C:\\Users\\Almog Cohen\\todo-list\\src\\index.js":"1","C:\\Users\\Almog Cohen\\todo-list\\src\\App.js":"2","C:\\Users\\Almog Cohen\\todo-list\\src\\reportWebVitals.js":"3","C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoList.js":"4","C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoListItems\\TodoListItems.js":"5","C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoListItems\\ActionMenu.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":188,"mtime":1610899665175,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2358,"mtime":1610906021972,"results":"11","hashOfConfig":"8"},{"size":3311,"mtime":1610906504071,"results":"12","hashOfConfig":"8"},{"size":1371,"mtime":1610898971903,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ndl31s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Almog Cohen\\todo-list\\src\\index.js",[],["29","30"],"C:\\Users\\Almog Cohen\\todo-list\\src\\App.js",[],"C:\\Users\\Almog Cohen\\todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoList.js",[],"C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoListItems\\TodoListItems.js",["31"],"import React, { useState } from \"react\";\r\nimport \"./TodoListItems.css\";\r\nimport ActionMenu from \"./ActionMenu\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst TodoListItems = ({ id, task, description, done, onRemove }) => {\r\n  const [checkbox, setCheckbox] = useState(done);\r\n  const [taskName, setTaskName] = useState(task);\r\n  const [taskDescription, setTaskDescription] = useState(description);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [textForm, setTextForm] = useState({});\r\n\r\n  const handleRemove = () => {\r\n    onRemove(id);\r\n  };\r\n\r\n  // Set the checkbox - checked/unchecked\r\n  const handleComplete = () => {\r\n    setCheckbox(!checkbox);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    setIsEditMode(true);\r\n  };\r\n\r\n  const handleModalSubmit = () => {\r\n    console.log(textForm);\r\n    if (textForm.name) {\r\n      setTaskName(textForm.name);\r\n    }\r\n    if (textForm.description) {\r\n      setTaskDescription(textForm.description);\r\n    }\r\n    setIsEditMode(false);\r\n  };\r\n\r\n  // Getting the text changes from the modal\r\n  const onInputChange = (event) => {\r\n    switch (event.target.name) {\r\n      case \"name\":\r\n        setTextForm({ ...textForm, name: event.target.value });\r\n        break;\r\n      case \"description\":\r\n        setTextForm({ ...textForm, description: event.target.value });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todolist-items\">\r\n      <div>\r\n        <React.Fragment>\r\n          <Typography className=\"task-name\">{taskName}</Typography>\r\n          {taskDescription}\r\n        </React.Fragment>\r\n      </div>\r\n\r\n      <div className=\"todo-icons\">\r\n        <Checkbox\r\n          defaultChecked\r\n          checked={checkbox}\r\n          color=\"primary\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n        <ActionMenu\r\n          onComplete={handleComplete}\r\n          onRemove={handleRemove}\r\n          onRename={handleRename}\r\n        />\r\n      </div>\r\n\r\n      {/* Open Modal for updating a specific */}\r\n      <Modal show={isEditMode} onHide={() => setIsEditMode(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Editing {taskName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            name=\"name\"\r\n            className=\"text-field\"\r\n            label=\"Task\"\r\n            defaultValue={taskName}\r\n            onChange={onInputChange}\r\n          />\r\n          <br />\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            defaultValue={taskDescription}\r\n            onChange={onInputChange}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setIsEditMode(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleModalSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListItems;\r\n","C:\\Users\\Almog Cohen\\todo-list\\src\\Components\\TodoList\\TodoListItems\\ActionMenu.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":44,"column":5,"nodeType":"40","messageId":"41","endLine":51,"endColumn":6},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["44"],["45"],"no-global-assign","no-unsafe-negation"]